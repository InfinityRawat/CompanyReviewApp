companyservice:
  url: http://companyservice

jobservice:
  url: http://jobservice
  
reviewservice:
  url: http://reviewservice
  

eureka:
  client:
    fetch-registry: false
    register-with-eureka: false    

resilience4j:
  circuitbreaker:
    instances:
      companyBreaker:
        automatic-transition-from-open-to-half-open-enabled: true
        register-health-indicator: true
        sliding-window-size: 10
        sliding-window-type: count-based
        minimum-number-of-calls: 5
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        permitted-number-of-calls-in-half-open-state: 3
  retry:
    instances:
      companyBreaker:
       max-attempts: 5
       wait-duration: 2s
  ratelimiter:
    instances:
      companyBreaker:
        limit-for-period: 2
        limit-refresh-period: 4s
        timeout-duration: 0


spring:
  datasource:
    url: jdbc:postgresql://postgres:5432/job
    username: embarkx
    password: embarkx
  jpa:
    database: postgresql
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.PostgreSQLDialect      
  h2:
    console:
      enabled: true
  application:
    name: JobMicroservice  



  
logging:
  level:
    '[org.springframework.jdbc]': debug 


server:
  port: 8081

    
management:
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include:
        - "*"
  endpoint:
    health:
      show-details: always
    circuitbreakers:
      enabled: true        
  info:
    env:
      enabled: true
  tracing:
    sampling:
      probability: 1.0      
  health:
    circuitbreakers:
      enabled: true
info:
  app:
    name:"JobMicroservice application"      