services:
 postgres:
  build:
   context: postgres
  image: postgres
  container_name: postgres_container
  environment:
   POSTGRES_USER: admin
   POSTGRES_PASSWORD: password
   PGDATA: /data/postgres
  volumes:
  - postgres:/data/postgres
  ports:
  - "5432:5432"
  networks:
  - postgresNetwork
  restart: unless-stopped
  
 pgadmin:
  container_name: pgAdmin_container
  image: dpage/pgadmin4
  environment:
   PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
   PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-password}
   PGADMIN_CONFIG_SERVER_MODE: 'False'
  volumes:
   - pgadmin:/var/lib/pgadmin
  ports:
   - "5050:80"
  networks:
   - postgresNetwork
  restart: unless-stopped
  
  
 zipkin:
  image: openzipkin/zipkin
  container_name: zipkin
  ports:
  - "9411:9411"
  networks:
   - postgresNetwork
# rabbitMq -> rabbitmq for k8s
 rabbitmq:
  image: rabbitmq:3.13-management
  container_name: rabbitMq
  ports:
  - 5672:5672
  - 15672:15672
  networks:
  - postgresNetwork
 
 config-server:
  image: infinityrawat/config-server:latest
  container_name: config-server
  ports:
  - "9090:9090"
  depends_on:
  - service-reg
  networks:
  - microserviceNetwork
  - postgresNetwork
  environment:
  - SPRING_PROFILES_ACTIVE=docker
  
 service-reg:
   image: infinityrawat/service-reg:latest
   container_name: service-reg
   ports:
   - "8761:8761"
   depends_on:
   - rabbitmq
   - pgadmin
   - postgres
   - zipkin
   networks:
   - microserviceNetwork
   - postgresNetwork
 
 companyMicroservice:
  image: infinityrawat/companyservice:latest
  container_name: companyservice
  ports:
  - "8082:8082"
  depends_on:
  - service-reg
  - config-server
  environment:
  - SPRING_PROFILES_ACTIVE=docker
  networks:
   - microserviceNetwork
   - postgresNetwork
  
 jobMicroservice:
  image: infinityrawat/jobservice:latest
  container_name: jobservice
  ports:
  - "8081:8081"
  depends_on:
  - service-reg
  - config-server
  networks:
   - microserviceNetwork
   - postgresNetwork
  environment:
  - SPRING_PROFILES_ACTIVE=docker
  
 reviewMicroservice2:
  image: infinityrawat/reviewservice:latest
  container_name: reviewservice
  ports:
  - "8083:8083"
  depends_on:
  - service-reg
  - config-server
  networks:
   - microserviceNetwork
   - postgresNetwork
  environment:
  - SPRING_PROFILES_ACTIVE=docker
  
 reviewapp-gateway:
  image: infinityrawat/reviewapp-gateway:latest
  container_name: reviewapp-gateway
  ports:
  - "8084:8084"
  depends_on:
  - service-reg
  networks:
   - microserviceNetwork
   - postgresNetwork
  environment:
  - SPRING_PROFILES_ACTIVE=docker
  
networks:
 microserviceNetwork:
  driver: bridge
 postgresNetwork:
  driver: bridge
  
volumes:
  postgres:
  pgadmin:

   
  